[package]
name = "wasm-avif-encoder"
description = "A WebAssembly AVIF encoder"
version = "0.1.0"
authors = ["Sascha Zarhuber <saschazar21@yahoo.de>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "wee_alloc"]

[dependencies]
wasm-bindgen = "0.2.63"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
avif-serialize = "0.6.5"
rav1e = { version = "0.4.0", features = ["serialize", "wasm"] }
rgb = "0.8.25"
serde = { version = "1.0", features = ["derive"] }
serde_repr = "0.1"
serde-wasm-bindgen = "0.1.3"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "z"
lto = true
